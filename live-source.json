<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IPTV直播源跳转</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#165DFF',
                        secondary: '#36D399',
                        danger: '#F87272',
                    },
                    fontFamily: {
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    },
                }
            }
        }
    </script>
    <style type="text/tailwindcss">
        @layer utilities {
            .content-auto {
                content-visibility: auto;
            }
            .pulse-animation {
                animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
            }
            @keyframes pulse {
                0%, 100% {
                    opacity: 1;
                }
                50% {
                    opacity: 0.5;
                }
            }
        }
    </style>
</head>
<body class="bg-gray-900 text-white min-h-screen flex flex-col items-center justify-center p-4">
    <div class="max-w-md w-full text-center">
        <!-- 加载状态 -->
        <div id="loadingState" class="flex flex-col items-center">
            <div class="w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mb-6"></div>
            <h1 class="text-2xl font-bold mb-2 text-primary">正在获取直播源</h1>
            <p class="text-gray-400 mb-4">请稍候，正在为您连接到最新的直播源...</p>
            <div class="w-full bg-gray-700 rounded-full h-2.5 mt-6">
                <div id="progressBar" class="bg-secondary h-2.5 rounded-full w-0 pulse-animation"></div>
            </div>
            <p id="countdown" class="mt-4 text-gray-500">将在 <span id="countdownNum">3</span> 秒后自动跳转</p>
        </div>

        <!-- 错误状态 -->
        <div id="errorState" class="hidden">
            <div class="text-danger text-5xl mb-6">
                <i class="fa fa-exclamation-circle"></i>
            </div>
            <h1 class="text-2xl font-bold mb-4 text-danger">获取直播源失败</h1>
            <p id="errorMessage" class="text-gray-400 mb-6">无法连接到服务器，请稍后重试</p>
            <button id="retryBtn" class="bg-primary hover:bg-primary/90 text-white font-medium py-2 px-6 rounded-lg transition-all">
                <i class="fa fa-refresh mr-2"></i>重试
            </button>
        </div>

        <!-- 信息展示 -->
        <div class="mt-8 text-xs text-gray-500">
            <p>最后更新时间: <span id="lastUpdated">-</span></p>
        </div>
    </div>

    <script>
        // 配置
        const JSON_FILE_PATH = 'live-source.json'; // GitHub上JSON文件的路径
        const REDIRECT_DELAY = 3000; // 跳转延迟时间(毫秒)
        
        // DOM元素
        const loadingState = document.getElementById('loadingState');
        const errorState = document.getElementById('errorState');
        const errorMessage = document.getElementById('errorMessage');
        const retryBtn = document.getElementById('retryBtn');
        const progressBar = document.getElementById('progressBar');
        const countdownNum = document.getElementById('countdownNum');
        const lastUpdatedEl = document.getElementById('lastUpdated');
        
        // 倒计时
        let countdown = Math.ceil(REDIRECT_DELAY / 1000);
        
        // 更新进度条
        function updateProgress() {
            const progress = 100 - (countdown / (REDIRECT_DELAY / 1000) * 100);
            progressBar.style.width = `${progress}%`;
            countdownNum.textContent = countdown;
            countdown--;
        }
        
        // 获取直播源并跳转
        function fetchAndRedirect() {
            // 重置状态
            loadingState.classList.remove('hidden');
            errorState.classList.add('hidden');
            countdown = Math.ceil(REDIRECT_DELAY / 1000);
            progressBar.style.width = '0%';
            
            // 更新进度
            const progressInterval = setInterval(updateProgress, 1000);
            
            // 从JSON文件获取直播源
            fetch(JSON_FILE_PATH)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP错误: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    clearInterval(progressInterval);
                    
                    // 更新最后更新时间
                    if (data.lastUpdated) {
                        const date = new Date(data.lastUpdated);
                        lastUpdatedEl.textContent = date.toLocaleString();
                    }
                    
                    // 验证直播源
                    if (!data.liveSource || !data.liveSource.startsWith('http')) {
                        throw new Error('无效的直播源地址');
                    }
                    
                    if (data.status !== 'active') {
                        throw new Error('当前直播源不可用');
                    }
                    
                    // 延迟跳转
                    setTimeout(() => {
                        window.location.href = data.liveSource;
                    }, REDIRECT_DELAY);
                })
                .catch(error => {
                    clearInterval(progressInterval);
                    loadingState.classList.add('hidden');
                    errorState.classList.remove('hidden');
                    errorMessage.textContent = `错误: ${error.message}`;
                    console.error('获取直播源失败:', error);
                });
        }
        
        // 重试按钮事件
        retryBtn.addEventListener('click', fetchAndRedirect);
        
        // 页面加载时执行
        window.addEventListener('load', fetchAndRedirect);
    </script>
</body>
</html>
